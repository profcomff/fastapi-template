name: Python package

on:
  pull_request:

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Set up docker
        uses: docker-practice/actions-setup-docker@master
      - name: Run postgres
        run: |
          docker run -d -p 5432:5432 -e POSTGRES_HOST_AUTH_METHOD=trust --name db-test postgres:15-alpine
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m ensurepip
          python -m pip install --upgrade --no-cache-dir pip
          python -m pip install --upgrade --no-cache-dir -r requirements.txt -r requirements.dev.txt
      - name: Migrate DB
        run: |
          DB_DSN=postgresql://postgres@localhost:5432/postgres alembic upgrade head
      - name: Build coverage file
        run: |
          DB_DSN=postgresql://postgres@localhost:5432/postgres pytest --cache-clear --showlocals --cov={{cookiecutter.module_name}} tests > pytest-coverage.txt
      - name: Print report
        if: always()
        run: |
          cat pytest-coverage.txt
      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - uses: isort/isort-action@master
        with:
          requirementsFiles: "requirements.txt requirements.dev.txt"
      - uses: psf/black@stable
      - name: Comment if linting failed
        if: ${{ failure() }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            :poop: Code linting failed, use `black` and `isort` to fix it.

