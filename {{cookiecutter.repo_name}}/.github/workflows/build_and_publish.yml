name: Build, publish and deploy docker

on:
  push:
    branches: ['main']
    tags:
      - 'v*'


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: {{"${{ github.repository }}"}}

jobs:
  build-and-push-image:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: {{"${{ env.REGISTRY }}"}}
          username: {{"${{ github.actor }}"}}
          password: {{"${{ secrets.GITHUB_TOKEN }}"}}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}
          tags: |
            type=ref,event=tag,enable={{"${{ startsWith(github.ref, 'refs/tags/v') }}"}}
            type=raw,value=latest,enable={{"${{ startsWith(github.ref, 'refs/tags/v') }}"}}
            type=raw,value=test,enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: {{"${{ steps.meta.outputs.tags }}"}}
          labels: {{"${{ steps.meta.outputs.labels }}"}}
          build-args: |
            APP_VERSION=${{ github.ref_name }}

  deploy-testing:
    name: Deploy Testing
    needs: build-and-push-image
    runs-on: [self-hosted, Linux]
    environment:
      name: Testing
      url: https://{{cookiecutter.module_name}}.api.test.profcomff.com/
    env:
      CONTAITER_NAME: com_profcomff_api_{{cookiecutter.module_name}}_test
    permissions:
      packages: read

    steps:
      - name: Pull new version
        run: docker pull {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:test

      - name: Migrate DB
        run: |
          docker run \
            --rm \
            --network=web \
            --env DB_DSN={{"${{ secrets.DB_DSN }}"}} \
            --name {{"${{ env.CONTAITER_NAME }}"}}_migration \
            --workdir="/" \
            {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:test \
            alembic upgrade head

      - name: Run new version
        id: run_test
        run: |
          docker stop {{"${{ env.CONTAITER_NAME }}"}} || true && docker rm {{"${{ env.CONTAITER_NAME }}"}} || true
          docker run \
            --detach \
            --restart on-failure:3 \
            --network=web \
            --env DB_DSN='{{"${{ secrets.DB_DSN }}"}}' \
            --env GUNICORN_CMD_ARGS='--log-config logging_test.conf' \
            --name {{"${{ env.CONTAITER_NAME }}"}} \
            {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:test

  deploy-production:
    name: Deploy Production
    needs: build-and-push-image
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: [self-hosted, Linux]
    environment:
      name: Production
      url: https://{{cookiecutter.module_name}}.api.profcomff.com/
    env:
      CONTAITER_NAME: com_profcomff_api_{{cookiecutter.module_name}}
    permissions:
      packages: read

    steps:
      - name: Pull new version
        run: docker pull {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:latest

      - name: Migrate DB
        run: |
          docker run \
            --rm \
            --network=web \
            --env DB_DSN={{"${{ secrets.DB_DSN }}"}} \
            --name {{"${{ env.CONTAITER_NAME }}"}}_migration \
            --workdir="/" \
            {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:latest \
            alembic upgrade head

      - name: Run new version
        id: run_test
        run: |
          docker stop {{"${{ env.CONTAITER_NAME }}"}} || true && docker rm {{"${{ env.CONTAITER_NAME }}"}} || true
          docker run \
            --detach \
            --restart always \
            --network=web \
            --env DB_DSN='{{"${{ secrets.DB_DSN }}"}}' \
            --env GUNICORN_CMD_ARGS='--log-config logging_prod.conf' \
            --name {{"${{ env.CONTAITER_NAME }}"}} \
            {{"${{ env.REGISTRY }}"}}/{{"${{ env.IMAGE_NAME }}"}}:latest
